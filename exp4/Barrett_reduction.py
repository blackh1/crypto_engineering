# Barrett Reduction
from math import floor

a = 119622243691652791926624958757539812870343697756965555947851689620437007339067590840244134647738820841516742945946967859060972856909630176302987254978767443348622356250921749515210122020964374000475003334725542614161174991845476772346576934879728782730881118340830754614956013613969423334192657828131003388299
n = 9154177585950778330404266716843903911141656354502839493009204757869811423486336091534719363697921500476936333417824477931913798916875681965397443324948447407235046525541432546041900396199209438489478426863996342356158978643220028971689169289348419227616055698914435796706778784083611666762111029863591428119
k = 1024
m = floor(2**k/n)  # precompute

def barRedc(a, n):
    q = (a * m) >> k
    a -= q * n
    if a >= n:
        a -= n
    return a

if __name__ == '__main__':
    print('The result of plain method:', a % n, sep='\n')
    print('The result of Barrett Reduction:', barRedc(a, n), sep='\n')
